Disassembly Listing for Stack_Error_Trap
Generated From:
/Users/peb/Documents/02-Invaders/Elec/0-Datasheets/33e/dspic_code/CE407_Stack_Error_Trap/Stack_Error_Trap.X/dist/default/debug/Stack_Error_Trap.X.debug.elf
8 mars 2014 22:58:26

---  /Users/peb/Documents/02-Invaders/Elec/0-Datasheets/33e/dspic_code/CE407_Stack_Error_Trap/src/traps.c
1:                 /**********************************************************************
2:                 * © 2005 Microchip Technology Inc.
3:                 *
4:                 * FileName:        traps.c
5:                 * Dependencies:    Header (.h) files if applicable, see below
6:                 * Processor:       dsPIC33Exxxx/PIC24Exxxx
7:                 * Compiler:        MPLAB¨ C30 v3.30 or higher
8:                 *
9:                 * SOFTWARE LICENSE AGREEMENT:
10:                * Microchip Technology Incorporated ("Microchip") retains all ownership and 
11:                * intellectual property rights in the code accompanying this message and in all 
12:                * derivatives hereto.  You may use this code, and any derivatives created by 
13:                * any person or entity by or on your behalf, exclusively with Microchip's
14:                * proprietary products.  Your acceptance and/or use of this code constitutes 
15:                * agreement to the terms and conditions of this notice.
16:                *
17:                * CODE ACCOMPANYING THIS MESSAGE IS SUPPLIED BY MICROCHIP "AS IS".  NO 
18:                * WARRANTIES, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED 
19:                * TO, IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A 
20:                * PARTICULAR PURPOSE APPLY TO THIS CODE, ITS INTERACTION WITH MICROCHIP'S 
21:                * PRODUCTS, COMBINATION WITH ANY OTHER PRODUCTS, OR USE IN ANY APPLICATION. 
22:                *
23:                * YOU ACKNOWLEDGE AND AGREE THAT, IN NO EVENT, SHALL MICROCHIP BE LIABLE, WHETHER 
24:                * IN CONTRACT, WARRANTY, TORT (INCLUDING NEGLIGENCE OR BREACH OF STATUTORY DUTY), 
25:                * STRICT LIABILITY, INDEMNITY, CONTRIBUTION, OR OTHERWISE, FOR ANY INDIRECT, SPECIAL, 
26:                * PUNITIVE, EXEMPLARY, INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, FOR COST OR EXPENSE OF 
27:                * ANY KIND WHATSOEVER RELATED TO THE CODE, HOWSOEVER CAUSED, EVEN IF MICROCHIP HAS BEEN 
28:                * ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE.  TO THE FULLEST EXTENT 
29:                * ALLOWABLE BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN ANY WAY RELATED TO 
30:                * THIS CODE, SHALL NOT EXCEED THE PRICE YOU PAID DIRECTLY TO MICROCHIP SPECIFICALLY TO 
31:                * HAVE THIS CODE DEVELOPED.
32:                *
33:                * You agree that you are solely responsible for testing the code and 
34:                * determining its suitability.  Microchip has no obligation to modify, test, 
35:                * certify, or support the code.
36:                *
37:                * REVISION HISTORY:
38:                *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
39:                * Author            Date      Comments on this revision
40:                *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
41:                * RK 			    03/09/06  First release of source file
42:                *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
43:                * Srikar D			04/27/11  Updated for dsPIC33E / PIC24E
44:                *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
45:                *
46:                * ADDITIONAL NOTES:
47:                * 1. This file contains trap service routines (handlers) for hardware
48:                *    exceptions generated by the dsPIC33E device.
49:                * 2. All trap service routines in this file simply ensure that device
50:                *    continuously executes code within the trap service routine. Users
51:                *    may modify the basic framework provided here to suit to the needs
52:                *    of their application.
53:                *
54:                **********************************************************************/
55:                
56:                #if defined(__dsPIC33E__)
57:                #include "p33exxxx.h"
58:                #elif defined(__PIC24E__)
59:                #include "p24exxxx.h"
60:                #endif
61:                
62:                void (*getErrLoc(void))(void);  // Get Address Error Loc
63:                void (*errLoc)(void);           // Function Pointer   
64:                
65:                
66:                void __attribute__((__interrupt__)) _OscillatorFail(void);
67:                void __attribute__((__interrupt__)) _AddressError(void);
68:                void __attribute__((__interrupt__)) _StackError(void);
69:                void __attribute__((__interrupt__)) _MathError(void);
70:                void __attribute__((__interrupt__)) _DMACError(void);
71:                
72:                /*
73:                Primary Exception Vector handlers:
74:                These routines are used if INTCON2bits.ALTIVT = 0.
75:                All trap service routines in this file simply ensure that device
76:                continuously executes code within the trap service routine. Users
77:                may modify the basic framework provided here to suit to the needs
78:                of their application.
79:                */
80:                void __attribute__((interrupt, no_auto_psv)) _OscillatorFail(void)
81:                {
00035C  FA0000     LNK #0x0
82:                        INTCON1bits.OSCFAIL = 0;        //Clear the trap flag
00035E  A928C0     BCLR INTCON1, #1
83:                        while (1);
000360  37FFFF     BRA 0x360
84:                }
85:                
86:                void __attribute__((interrupt, no_auto_psv)) _AddressError(void)
87:                {
000362  FA0000     LNK #0x0
88:                        INTCON1bits.ADDRERR = 0;        //Clear the trap flag
000364  A968C0     BCLR INTCON1, #3
89:                        while (1);
000366  37FFFF     BRA 0x366
90:                }
91:                void __attribute__((interrupt, no_auto_psv)) _StackError(void)
92:                {
000368  F80036     PUSH RCOUNT
00036A  BE9F80     MOV.D W0, [W15++]
00036C  BE9F82     MOV.D W2, [W15++]
00036E  BE9F84     MOV.D W4, [W15++]
000370  BE9F86     MOV.D W6, [W15++]
000372  FA0000     LNK #0x0
93:                
94:                        errLoc=getErrLoc();
000374  070009     RCALL _getErrLoc
000376  888280     MOV W0, errLoc
95:                        INTCON1bits.STKERR = 0;         //Clear the trap flag
000378  A948C0     BCLR INTCON1, #2
96:                        while (1);
00037A  37FFFF     BRA 0x37A
97:                
98:                }
99:                
100:               void __attribute__((interrupt, no_auto_psv)) _MathError(void)
101:               {
00037C  FA0000     LNK #0x0
102:                       INTCON1bits.MATHERR = 0;        //Clear the trap flag
00037E  A988C0     BCLR INTCON1, #4
103:                       while (1);
000380  37FFFF     BRA 0x380
104:               }
105:               
106:               void __attribute__((interrupt, no_auto_psv)) _DMACError(void)
107:               {
000382  FA0000     LNK #0x0
108:                       INTCON1bits.DMACERR = 0;        //Clear the trap flag
000384  A9A8C0     BCLR INTCON1, #5
109:                       while (1);
000386  37FFFF     BRA 0x386
110:               }
111:               
112:               
113:               
---  /Users/peb/Documents/02-Invaders/Elec/0-Datasheets/33e/dspic_code/CE407_Stack_Error_Trap/src/main.c  
1:                 /**********************************************************************
2:                 * © 2005 Microchip Technology Inc.
3:                 *
4:                 * FileName:        main.c
5:                 * Dependencies:    Header (.h) files if applicable, see below
6:                 * Processor:       dsPIC33Exxxx/PIC24Exxxx
7:                 * Compiler:        MPLAB¨ C30 v3.30 or higher
8:                 *
9:                 * SOFTWARE LICENSE AGREEMENT:
10:                * Microchip Technology Incorporated ("Microchip") retains all ownership and 
11:                * intellectual property rights in the code accompanying this message and in all 
12:                * derivatives hereto.  You may use this code, and any derivatives created by 
13:                * any person or entity by or on your behalf, exclusively with Microchip's
14:                * proprietary products.  Your acceptance and/or use of this code constitutes 
15:                * agreement to the terms and conditions of this notice.
16:                *
17:                * CODE ACCOMPANYING THIS MESSAGE IS SUPPLIED BY MICROCHIP "AS IS".  NO 
18:                * WARRANTIES, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED 
19:                * TO, IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A 
20:                * PARTICULAR PURPOSE APPLY TO THIS CODE, ITS INTERACTION WITH MICROCHIP'S 
21:                * PRODUCTS, COMBINATION WITH ANY OTHER PRODUCTS, OR USE IN ANY APPLICATION. 
22:                *
23:                * YOU ACKNOWLEDGE AND AGREE THAT, IN NO EVENT, SHALL MICROCHIP BE LIABLE, WHETHER 
24:                * IN CONTRACT, WARRANTY, TORT (INCLUDING NEGLIGENCE OR BREACH OF STATUTORY DUTY), 
25:                * STRICT LIABILITY, INDEMNITY, CONTRIBUTION, OR OTHERWISE, FOR ANY INDIRECT, SPECIAL, 
26:                * PUNITIVE, EXEMPLARY, INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, FOR COST OR EXPENSE OF 
27:                * ANY KIND WHATSOEVER RELATED TO THE CODE, HOWSOEVER CAUSED, EVEN IF MICROCHIP HAS BEEN 
28:                * ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE.  TO THE FULLEST EXTENT 
29:                * ALLOWABLE BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN ANY WAY RELATED TO 
30:                * THIS CODE, SHALL NOT EXCEED THE PRICE YOU PAID DIRECTLY TO MICROCHIP SPECIFICALLY TO 
31:                * HAVE THIS CODE DEVELOPED.
32:                *
33:                * You agree that you are solely responsible for testing the code and 
34:                * determining its suitability.  Microchip has no obligation to modify, test, 
35:                * certify, or support the code.
36:                *
37:                * REVISION HISTORY:
38:                *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
39:                * Author            Date      Comments on this revision
40:                *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
41:                * RK 			    03/09/06  First release of source file
42:                *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
43:                *
44:                * ADDITIONAL NOTES:
45:                * Code Tested on:
46:                * Explorer 16 Demo board with dsPIC33EP512MU810 controller
47:                * The Processor starts with the Internal oscillator without PLL enabled and then the Clock is switched to PLL Mode.
48:                **********************************************************************/
49:                
50:                #if defined(__dsPIC33E__)
51:                #include "p33exxxx.h"
52:                #elif defined(__PIC24E__)
53:                #include "p24exxxx.h"
54:                #endif
55:                
56:                // Select the Stack Error
57:                #define STACK_OVER_FLOW     1
58:                #define STACK_UNDER_FLOW    0
59:                
60:                
61:                
62:                //Macros for Configuration Fuse Registers:
63:                //Invoke macros to set up  device configuration fuse registers.
64:                //The fuses will select the oscillator source, power-up timers, watch-dog
65:                //timers etc. The macros are defined within the device
66:                //header files. The configuration fuse registers reside in Flash memory.
67:                
68:                
69:                // Internal FRC Oscillator
70:                _FOSCSEL(FNOSC_FRC);		// FRC Oscillator 
71:                _FOSC(FCKSM_CSECMD & OSCIOFNC_OFF  & POSCMD_XT); 
72:                								// Clock Switching is enabled and Fail Safe Clock Monitor is disabled
73:                								// OSC2 Pin Function: OSC2 is Clock Output
74:                								// Primary Oscillator Mode: Disabled
75:                
76:                
77:                _FWDT(FWDTEN_OFF);              // Watchdog Timer Enabled/disabled by user software
78:                
79:                
80:                
81:                int main (void)
82:                {
0002CC  FA0000     LNK #0x0
83:                // Configure Oscillator to operate the device at 40Mhz
84:                // Fosc= Fin*M/(N1*N2), Fcy=Fosc/2
85:                // Fosc= 8M*40/(2*2)=80Mhz for 8M input clock
86:                	PLLFBD=38;					// M=40
0002CE  200261     MOV #0x26, W1
0002D0  207460     MOV #0x746, W0
0002D2  780801     MOV W1, [W0]
87:                	CLKDIVbits.PLLPOST=0;		// N1=2
0002D4  207440     MOV #0x744, W0
0002D6  784010     MOV.B [W0], W0
0002D8  B3C3F2     MOV #0x3F, W2
0002DA  604082     AND.B W0, W2, W1
0002DC  207440     MOV #0x744, W0
0002DE  784801     MOV.B W1, [W0]
88:                	CLKDIVbits.PLLPRE=0;		// N2=2
0002E0  207440     MOV #0x744, W0
0002E2  784090     MOV.B [W0], W1
0002E4  B3CE00     MOV #0xE0, W0
0002E6  60C080     AND.B W1, W0, W1
0002E8  207440     MOV #0x744, W0
0002EA  784801     MOV.B W1, [W0]
89:                	OSCTUN=0;					// Tune FRC oscillator, if FRC is used
0002EC  EB0080     CLR W1
0002EE  207480     MOV #0x748, W0
0002F0  780801     MOV W1, [W0]
90:                
91:                // Disable Watch Dog Timer
92:                	RCONbits.SWDTEN=0;
0002F2  A9A740     BCLR RCON, #5
93:                
94:                // Clock switch to incorporate PLL
95:                	__builtin_write_OSCCONH(0x03);		// Initiate Clock Switch to Primary
0002F4  200032     MOV #0x3, W2
0002F6  200781     MOV #0x78, W1
0002F8  2009A0     MOV #0x9A, W0
0002FA  207433     MOV #0x743, W3
0002FC  784981     MOV.B W1, [W3]
0002FE  784980     MOV.B W0, [W3]
000300  784982     MOV.B W2, [W3]
96:                													// Oscillator with PLL (NOSC=0b011)
97:                	__builtin_write_OSCCONL(0x01);		// Start clock switching
000302  200012     MOV #0x1, W2
000304  200461     MOV #0x46, W1
000306  200570     MOV #0x57, W0
000308  207423     MOV #0x742, W3
00030A  784981     MOV.B W1, [W3]
00030C  784980     MOV.B W0, [W3]
00030E  784982     MOV.B W2, [W3]
98:                	while (OSCCONbits.COSC != 0b011);	// Wait for Clock switch to occur
000310  207430     MOV #0x743, W0
000312  784010     MOV.B [W0], W0
000314  B3C702     MOV #0x70, W2
000316  604082     AND.B W0, W2, W1
000318  B3C300     MOV #0x30, W0
00031A  50CF80     SUB.B W1, W0, [W15]
00031C  3AFFF9     BRA NZ, 0x310
99:                
100:               // Wait for PLL to lock
101:               	while(OSCCONbits.LOCK!=1) {};
00031E  207420     MOV #0x742, W0
000320  784010     MOV.B [W0], W0
000322  B24200     AND.B #0x20, W0
000324  E00400     CP0.B W0
000326  32FFFB     BRA Z, 0x31E
102:               
103:               
104:               // Create Stack Error Trap
105:               #if (STACK_OVER_FLOW) 
106:                   createStkOflow();           // Create Divide by 0 Error
000328  070001     RCALL _createStkOflow
107:               #endif
108:               
109:               #if (STACK_UNDER_FLOW ) 
110:                   createStkUflow();           // Create Divide by 0 Error
111:               #endif
112:                    
113:               
114:                   while(1);
00032A  37FFFF     BRA 0x32A
115:               
116:               }
117:               
118:               
119:               
120:               
---  /Users/peb/Documents/02-Invaders/Elec/0-Datasheets/33e/dspic_code/CE407_Stack_Error_Trap/src/getErrLoc.s
                                                  1:     /**********************************************************************
                                                  2:     * © 2006 Microchip Technology Inc.
                                                  3:     *
                                                  4:     * FileName:        getErrLoc.s
                                                  5:     * Dependencies:    Header (.h/.inc) files if applicable, see below
                                                  6:     * Processor:       dsPIC33Exxxx/PIC24Exxxx
                                                  7:     * Compiler:        MPLAB¨ C30 v3.30 or higher
                                                  8:     *
                                                  9:     * SOFTWARE LICENSE AGREEMENT:
                                                  10:    * Microchip Technology Incorporated ("Microchip") retains all ownership and 
                                                  11:    * intellectual property rights in the code accompanying this message and in all 
                                                  12:    * derivatives hereto.  You may use this code, and any derivatives created by 
                                                  13:    * any person or entity by or on your behalf, exclusively with Microchip's
                                                  14:    * proprietary products.  Your acceptance and/or use of this code constitutes 
                                                  15:    * agreement to the terms and conditions of this notice.
                                                  16:    *
                                                  17:    * CODE ACCOMPANYING THIS MESSAGE IS SUPPLIED BY MICROCHIP "AS IS".  NO 
                                                  18:    * WARRANTIES, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED 
                                                  19:    * TO, IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A 
                                                  20:    * PARTICULAR PURPOSE APPLY TO THIS CODE, ITS INTERACTION WITH MICROCHIP'S 
                                                  21:    * PRODUCTS, COMBINATION WITH ANY OTHER PRODUCTS, OR USE IN ANY APPLICATION. 
                                                  22:    *
                                                  23:    * YOU ACKNOWLEDGE AND AGREE THAT, IN NO EVENT, SHALL MICROCHIP BE LIABLE, WHETHER 
                                                  24:    * IN CONTRACT, WARRANTY, TORT (INCLUDING NEGLIGENCE OR BREACH OF STATUTORY DUTY), 
                                                  25:    * STRICT LIABILITY, INDEMNITY, CONTRIBUTION, OR OTHERWISE, FOR ANY INDIRECT, SPECIAL, 
                                                  26:    * PUNITIVE, EXEMPLARY, INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, FOR COST OR EXPENSE OF 
                                                  27:    * ANY KIND WHATSOEVER RELATED TO THE CODE, HOWSOEVER CAUSED, EVEN IF MICROCHIP HAS BEEN 
                                                  28:    * ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE.  TO THE FULLEST EXTENT 
                                                  29:    * ALLOWABLE BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN ANY WAY RELATED TO 
                                                  30:    * THIS CODE, SHALL NOT EXCEED THE PRICE YOU PAID DIRECTLY TO MICROCHIP SPECIFICALLY TO 
                                                  31:    * HAVE THIS CODE DEVELOPED.
                                                  32:    *
                                                  33:    * You agree that you are solely responsible for testing the code and 
                                                  34:    * determining its suitability.  Microchip has no obligation to modify, test, 
                                                  35:    * certify, or support the code.
                                                  36:    *
                                                  37:    * REVISION HISTORY:
                                                  38:    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                  39:    * Author            Date      Comments on this revision
                                                  40:    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                  41:    * RK                03/22/06  First release of source file
                                                  42:    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                  43:    * Srikar D			04/27/11  Updated for dsPIC33E / PIC24E
                                                  44:    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                  45:    *
                                                  46:    * ADDITIONAL NOTES:
                                                  47:    * The user should check to ensure that the PC value retrieved from
                                                  48:    * the stack is a valid program memory address. IF it isn't then
                                                  49:    * the user may conclude that the address error trap was generated
                                                  50:    * because an invalid value was pushed into the stack and followed by a
                                                  51:    * a "RETFIE" or "RETURN" instruction.
                                                  52:    **********************************************************************/
                                                  53:    
                                                  54:    .ifdef __dsPIC33E
                                                  55:    .include "p33Exxxx.inc"
                                                  56:    .endif
                                                  57:    .ifdef __PIC24E
                                                  58:    .include "p24Exxxx.inc"
                                                  59:    .endif
                                                  60:    
                                                  61:    	.global 	_getErrLoc
                                                  62:    
                                                  63:    	.section .text
                                                  64:    
                                                  65:    ; Stack Growth from Trap Error
                                                  66:    ;1. PC[15:0]            <--- Trap Address
                                                  67:    ;2. SR[7:0]:IPL3:PC[22:16]
                                                  68:    ;3. RCOUNT
                                                  69:    ;4. W0
                                                  70:    ;5. W1
                                                  71:    ;6. W2
                                                  72:    ;7. W3
                                                  73:    ;8. W4
                                                  74:    ;9. W5
                                                  75:    ;10. W6
                                                  76:    ;11. W7
                                                  77:    ;12. OLD FRAME POINTER [W14]
                                                  78:    ;13. PC[15:0]           <---- W14 
                                                  79:    ;14. 0:PC[22:16]
                                                  80:    ;15.                    <---- W15
                                                  81:    
                                                  82:    _getErrLoc:
000388  78010E     MOV W14, W2                    83:            mov    w14,w2
00038A  510178     SUB W2, #0x18, W2              84:            sub    w2,#24,w2
00038C  780032     MOV [W2++], W0                 85:            mov    [w2++],w0
00038E  7800B2     MOV [W2++], W1                 86:            mov    [w2++],w1 
000390  2007F3     MOV #0x7F, W3                  87:            mov    #0x7f,w3     ; Mask off non-address bits
000392  608083     AND W1, W3, W1                 88:            and    w1,w3,w1
                                                  89:    
000394  200022     MOV #0x2, W2                   90:            mov    #2,w2        ; Decrement the address by 2
000396  500002     SUB W0, W2, W0                 91:            sub    w0,w2,w0
000398  EB0100     CLR W2                         92:            clr    w2
00039A  588082     SUBB W1, W2, W1                93:            subb   w1,w2,w1
00039C  060000     RETURN                         94:            return
                                                  95:         
                                                  96:    
---  /Users/peb/Documents/02-Invaders/Elec/0-Datasheets/33e/dspic_code/CE407_Stack_Error_Trap/src/createStkErr.s
                                                  1:     /**********************************************************************
                                                  2:     * © 2006 Microchip Technology Inc.
                                                  3:     *
                                                  4:     * FileName:        createStkErr.s
                                                  5:     * Dependencies:    Header (.h/.inc) files if applicable, see below
                                                  6:     * Processor:       dsPIC33Exxxx/PIC24Exxxx
                                                  7:     * Compiler:        MPLAB¨ C30 v3.30 or higher
                                                  8:     *
                                                  9:     * SOFTWARE LICENSE AGREEMENT:
                                                  10:    * Microchip Technology Incorporated ("Microchip") retains all ownership and 
                                                  11:    * intellectual property rights in the code accompanying this message and in all 
                                                  12:    * derivatives hereto.  You may use this code, and any derivatives created by 
                                                  13:    * any person or entity by or on your behalf, exclusively with Microchip's
                                                  14:    * proprietary products.  Your acceptance and/or use of this code constitutes 
                                                  15:    * agreement to the terms and conditions of this notice.
                                                  16:    *
                                                  17:    * CODE ACCOMPANYING THIS MESSAGE IS SUPPLIED BY MICROCHIP "AS IS".  NO 
                                                  18:    * WARRANTIES, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED 
                                                  19:    * TO, IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A 
                                                  20:    * PARTICULAR PURPOSE APPLY TO THIS CODE, ITS INTERACTION WITH MICROCHIP'S 
                                                  21:    * PRODUCTS, COMBINATION WITH ANY OTHER PRODUCTS, OR USE IN ANY APPLICATION. 
                                                  22:    *
                                                  23:    * YOU ACKNOWLEDGE AND AGREE THAT, IN NO EVENT, SHALL MICROCHIP BE LIABLE, WHETHER 
                                                  24:    * IN CONTRACT, WARRANTY, TORT (INCLUDING NEGLIGENCE OR BREACH OF STATUTORY DUTY), 
                                                  25:    * STRICT LIABILITY, INDEMNITY, CONTRIBUTION, OR OTHERWISE, FOR ANY INDIRECT, SPECIAL, 
                                                  26:    * PUNITIVE, EXEMPLARY, INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, FOR COST OR EXPENSE OF 
                                                  27:    * ANY KIND WHATSOEVER RELATED TO THE CODE, HOWSOEVER CAUSED, EVEN IF MICROCHIP HAS BEEN 
                                                  28:    * ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE.  TO THE FULLEST EXTENT 
                                                  29:    * ALLOWABLE BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN ANY WAY RELATED TO 
                                                  30:    * THIS CODE, SHALL NOT EXCEED THE PRICE YOU PAID DIRECTLY TO MICROCHIP SPECIFICALLY TO 
                                                  31:    * HAVE THIS CODE DEVELOPED.
                                                  32:    *
                                                  33:    * You agree that you are solely responsible for testing the code and 
                                                  34:    * determining its suitability.  Microchip has no obligation to modify, test, 
                                                  35:    * certify, or support the code.
                                                  36:    *
                                                  37:    * REVISION HISTORY:
                                                  38:    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                  39:    * Author            Date      Comments on this revision
                                                  40:    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                  41:    * RK                03/22/06  First release of source file
                                                  42:    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                  43:    * Srikar D			04/27/11  Updated for dsPIC33E / PIC24E
                                                  44:    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                  45:    *
                                                  46:    * ADDITIONAL NOTES:
                                                  47:    *
                                                  48:    **********************************************************************/
                                                  49:    
                                                  50:    .ifdef __dsPIC33E
                                                  51:    .include "p33Exxxx.inc"
                                                  52:    .endif
                                                  53:    .ifdef __PIC24E
                                                  54:    .include "p24Exxxx.inc"
                                                  55:    .endif
                                                  56:    
                                                  57:    	.global 	_createStkUflow
                                                  58:        .global     _createStkOflow
                                                  59:    
                                                  60:    	.section .text
                                                  61:    /******************************************************************************
                                                  62:      Stack Overflow
                                                  63:    *******************************************************************************/
                                                  64:    _createStkOflow:
                                                  65:    ; Save Stack and SPLIM register
00032C  78008F     MOV W15, W1                    66:            mov w15,w1
00032E  800102     MOV SPLIM, W2                  67:            mov SPLIM,w2
                                                  68:    
                                                  69:    ; Create Stack Overflow trap condition
000330  78000F     MOV W15, W0                    70:            mov w15,w0
000332  400074     ADD W0, #0x14, W0              71:            add w0,#20,w0
000334  880100     MOV W0, SPLIM                  72:            mov w0,SPLIM
                                                  73:                
000336  2000C0     MOV #0xC, W0                   74:            mov #12,w0
                                                  75:    
                                                  76:    oflow_loop:
000338  781F80     MOV W0, [W15++]                77:            push    w0
00033A  E90000     DEC W0, W0                     78:           	dec     w0, w0
00033C  3AFFFD     BRA NZ, 0x338                  79:    		bra     nz, oflow_loop 
                                                  80:    
                                                  81:    ; Restore Stack pointers and SPLIM values
00033E  780781     MOV W1, W15                    82:            mov     w1,w15
000340  880102     MOV W2, SPLIM                  83:            mov     w2,SPLIM
                                                  84:    
000342  060000     RETURN                         85:            return
                                                  86:         
                                                  87:    /******************************************************************************
                                                  88:      Stack Underflow
                                                  89:    *******************************************************************************/
                                                  90:    _createStkUflow:
                                                  91:    ; Save Stack and SPLIM register
000344  78008F     MOV W15, W1                    92:            mov w15,w1
000346  800102     MOV SPLIM, W2                  93:            mov SPLIM,w2
                                                  94:    
                                                  95:    ; Create Stack Underflow trap condition
000348  20FFF0     MOV #0xFFF, W0                 96:            mov #0xFFF,w0               ; Lowest Stack Address
00034A  400074     ADD W0, #0x14, W0              97:            add w0,#20,w0
00034C  780780     MOV W0, W15                    98:            mov w0,w15
                                                  99:                
00034E  2000B0     MOV #0xB, W0                   100:           mov #11,w0
                                                  101:   
                                                  102:   uflow_loop:
000350  7801CF     MOV [--W15], W3                103:           pop     w3
000352  E90000     DEC W0, W0                     104:          	dec     w0, w0
000354  3AFFFD     BRA NZ, 0x350                  105:   		bra     nz, uflow_loop 
                                                  106:   
                                                  107:   ; Restore Stack pointers and SPLIM values
000356  780781     MOV W1, W15                    108:           mov     w1,w15
000358  880102     MOV W2, SPLIM                  109:           mov     w2,SPLIM
                                                  110:   
00035A  060000     RETURN                         111:           return
